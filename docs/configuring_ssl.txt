In order to configure SSL, you must first create a certificate for tomcat to use:
	
$JAVA_HOME/bin/keytool -genkey -alias tomcat -keyalg RSA

the values entered in this wizard are specific to hostname on which tomcat is running.
Specifically the 'CN' (first) field, needs to match the hostname.

After generating the key (will generate .keystore in the home directory unless 

-keystore /path/to/my/keystore

is specified in the above command)

you need to add the following line to the CATALINA_HOME/conf/server.xml file:

    <Connector
   port="8443" maxThreads="200"
   scheme="https" secure="true" SSLEnabled="true"
   keystoreFile="~/.keystore" keystorePass="chang3m3"
   clientAuth="false" sslProtocol="TLS"/>

after this, restarting tomcat should show that a SSL listener is running on 8443.

Now you need to generate the key that will be used by bm4a app.  First grab the 
certificate from the host with ssl tomcat running using the grab_certificate.sh
script.  This will put a localhost_cert.pem file in your current directory. 

Next is platform dependent:

On *nix, the 
__create_keystore.sh and create_keystore.sh scripts should work (set values in
create_keystore.sh appropriately) (you will need to download the bouncycastle 
provider (http://www.bouncycastle.org/latest_releases.html) if it is not included.)  
This script will create the localhost_store.bks file that needs to be put in 
$BM4A_WORKSPACE/res/raw.

On windows, the app Portecle (http://portecle.sourceforge.net/) seemed to work well.  
Create a new BKS key, import the localhost_cert.pem file, say yeah yeah yeah, then 
save it as a bks key, copying the new bks file in $BM4A_WORKSPACE/res/raw.   

